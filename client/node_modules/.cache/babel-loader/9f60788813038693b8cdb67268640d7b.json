{"ast":null,"code":"var _jsxFileName = \"/home/kai/Downloads/itss_std_react/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ListTodo from './ListTodo';\nimport ButtonAdd from './ButtonAdd';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      check: true,\n      style: {}\n    };\n    this.getKey = this.getKey.bind(this);\n  }\n\n  componentWillMount() {\n    // clearInterval(this.timerID);\n    console.log('Component WILL MOUNT!');\n  }\n\n  componentDidMount() {\n    console.log('Component DID MOUNT!');\n    axios.get('/lists', {\n      params: {\n        data: true\n      }\n    }).then(res => {\n      this.setState({\n        data: res.data\n      });\n      this.timerID = setInterval(() => this.tick(), 1000);\n    });\n  }\n\n  componentWillReceiveProps(newProps) {\n    console.log('Component WILL RECIEVE PROPS!');\n  }\n\n  shouldComponentUpdate(newProps, newState) {\n    return this.state.check;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    console.log('Component WILL UPDATE!');\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  tick() {\n    this.setState({\n      date: Date.now()\n    });\n  }\n\n  getKey(key) {\n    this.setState({\n      data: []\n    });\n    this.setState({\n      check: key\n    });\n    axios.get('/lists', {\n      params: {\n        data: true\n      }\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        data: res.data\n      });\n    });\n  }\n\n  render() {\n    const data = this.state.data;\n    const time = this.state.date;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, \"ToDo\"), /*#__PURE__*/React.createElement(ButtonAdd, {\n      check: this.getKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(ListTodo, {\n      time: time,\n      loading: data,\n      check: this.getKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kai/Downloads/itss_std_react/client/src/App.js"],"names":["React","axios","ListTodo","ButtonAdd","App","Component","constructor","props","state","data","check","style","getKey","bind","componentWillMount","console","log","componentDidMount","get","params","then","res","setState","timerID","setInterval","tick","componentWillReceiveProps","newProps","shouldComponentUpdate","newState","componentWillUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","date","Date","now","key","render","time"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ListTodo from './ListTodo';\nimport ButtonAdd from './ButtonAdd';\nclass App  extends React.Component{\n\t  constructor(props){\n      super(props)\n      this.state = {data:[],check:true,style:{}};\n      this.getKey = this.getKey.bind(this);\n      }  \n    componentWillMount() {\n     // clearInterval(this.timerID);\n      console.log('Component WILL MOUNT!');\n   }\n    componentDidMount() {\n      console.log('Component DID MOUNT!');\n      axios.get('/lists',{params:{data:true}}).then((res)=>{\n      this.setState({data:res.data});\n      this.timerID = setInterval(\n      () => this.tick(),\n      1000\n    );\n      \n      });\n     }\n     componentWillReceiveProps(newProps) {    \n      console.log('Component WILL RECIEVE PROPS!');\n   }\n     shouldComponentUpdate(newProps, newState) {\n      \n      return this.state.check;\n   }\n    componentWillUpdate(nextProps, nextState) {\n    console.log('Component WILL UPDATE!');\n     \n   }\n   componentDidUpdate(prevProps, prevState) {\n   \n   }\n   \n   tick() {\n    this.setState({\n      date: Date.now()\n    });\n  }\n    getKey(key){\n    \tthis.setState({data:[]});\n    \tthis.setState({check:key});\n    \t axios.get('/lists',{params:{data:true}}).then((res)=>{\n    \t console.log(res.data);\n         this.setState({data:res.data});\n      \n      });\t\n\n    }  \n   \n  render(){\n  \tconst data = this.state.data;\n  \tconst time = this.state.date;\n  \treturn (\n    <div className=\"App\">\n    <h1>ToDo</h1>\n    <ButtonAdd check = {this.getKey}/>\n    <br/><br/>\n    <ListTodo time ={time} loading={data} check = {this.getKey}  />\n    </div>\n  );}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}